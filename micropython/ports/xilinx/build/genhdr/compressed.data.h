#define MP_MAX_UNCOMPRESSED_TEXT_LEN (68)
MP_COMPRESSED_DATA("argumen\364objec\364can'\364no\364supporte\344functio\356mus\364assignmen\364ar\347keywor\344generato\362multipl\345positiona\354nam\345b\345nonloca\354o\346require\344wron\347doesn'\364fo\362invali\344missin\347suppor\364t\357typ\345issubclass(\251afte\362empt\371foun\344i\356n\357allocatio\356expressio\356identifie\362tuple/lis\364unexpecte\344\341argument\363redefine\344wit\350instanc\345negativ\345overflo\367sequenc\345conver\364defaul\364expect\363failed\254ha\363indice\363in\364outsid\345impor\364inden\364lengt\350memor\371numbe\362synta\370value\363a\356clas\363inde\370isn'\364oute\362rang\345tupl\345'%q\247fro\355ite\355lis\364lon\347sel\346zer\357\262ba\344ou\364to\357*\252*\370a\363i\363o\362\261#%\344%\361%\365'break'/'continue\247'except\247'yield\247\252\2633-ar\3473\266<\275>\275BaseExceptio\356GeneratorExi\364LH\323Non\345StopIteratio\356__init__(\251acceptabl\345activ\345allocatin\347alread\371an\344an\371arg\363assig\356attribut\345attribute\363bas\345base\363befor\345bindin\347buffe\362buil\344b\371bytecod\345byte\363callabl\345characte\362chr(\251classe\363cod\345conflic\364consisten\364")
MP_MATCH_COMPRESSED("'break'/'continue' outside loop", "\377\327\264loop")
MP_MATCH_COMPRESSED("'yield' outside function", "\377\331\264\205")
MP_MATCH_COMPRESSED("* arg after **", "\377\332\210\233\316")
MP_MATCH_COMPRESSED("*x must be assignment target", "\377\317\206\216\207target")
MP_MATCH_COMPRESSED("3-arg pow() not supported", "\377\334pow()\203\204")
MP_MATCH_COMPRESSED("LHS of keyword arg must be an id", "\377\342\220\211\210\206\216\274id")
MP_MATCH_COMPRESSED("__init__() should return None", "\377\345should return\343")
MP_MATCH_COMPRESSED("argument name reused", "\377\200\215reused")
MP_MATCH_COMPRESSED("argument num/types mismatch", "\377\200num/types mismatch")
MP_MATCH_COMPRESSED("attributes not supported", "\377\357\203\204")
MP_MATCH_COMPRESSED("bad format string", "\377\313format string")
MP_MATCH_COMPRESSED("bad typecode", "\377\313typecode")
MP_MATCH_COMPRESSED("bytecode overflow", "\377\367\253")
MP_MATCH_COMPRESSED("can't assign to expression", "\377\202\355\230\241")
MP_MATCH_COMPRESSED("can't convert to int", "\377\202\255\230\263")
MP_MATCH_COMPRESSED("can't convert to str implicitly", "\377\202\255\230str implicitly")
MP_MATCH_COMPRESSED("can't create instance", "\377\202create\251")
MP_MATCH_COMPRESSED("can't declare nonlocal in outer code", "\377\202declare\217\236\300\375")
MP_MATCH_COMPRESSED("can't delete expression", "\377\202delete\241")
MP_MATCH_COMPRESSED("can't import name %q", "\377\202\265\215\325")
MP_MATCH_COMPRESSED("can't perform relative import", "\377\202perform relative\265")
MP_MATCH_COMPRESSED("can't send non-None value to a just-started generator", "\377\202send non-None value\230\245just-started\212")
MP_MATCH_COMPRESSED("chr() arg not in range(256)", "\377\373\210\203\236range(256)")
MP_MATCH_COMPRESSED("decimal numbers not supported", "\377decimal numbers\203\204")
MP_MATCH_COMPRESSED("default 'except' must be last", "\377\256\330\206\216last")
MP_MATCH_COMPRESSED("dict update sequence has wrong length", "\377dict update\254\261\222\267")
MP_MATCH_COMPRESSED("divide by zero", "\377divide\366\311")
MP_MATCH_COMPRESSED("empty separator", "\377\234separator")
MP_MATCH_COMPRESSED("exceptions must derive from BaseException", "\377exceptions\206derive\304\340")
MP_MATCH_COMPRESSED("expected tuple/list", "\377expected\243")
MP_MATCH_COMPRESSED("function got multiple values for argument '%q'", "\377\205got\213\273\224\200\303")
MP_MATCH_COMPRESSED("function missing keyword-only argument", "\377\205\226keyword-only\200")
MP_MATCH_COMPRESSED("function missing required keyword argument '%q'", "\377\205\226\221\211\200\303")
MP_MATCH_COMPRESSED("function missing required positional argument #%d", "\377\205\226\221\214\200\324")
MP_MATCH_COMPRESSED("generator already executing", "\377\212\351executing")
MP_MATCH_COMPRESSED("generator ignored GeneratorExit", "\377\212ignored\341")
MP_MATCH_COMPRESSED("generator raised StopIteration", "\377\212raised\344")
MP_MATCH_COMPRESSED("identifier redefined as global", "\377\242\247\320global")
MP_MATCH_COMPRESSED("identifier redefined as nonlocal", "\377\242\247\320\217")
MP_MATCH_COMPRESSED("index out of range", "\377\276\314\220\301")
MP_MATCH_COMPRESSED("indices must be integers", "\377\262\206\216integers")
MP_MATCH_COMPRESSED("int() arg 2 must be >= 2 and <= 36", "\377int()\210\312\206\216\337\312\352\336\335")
MP_MATCH_COMPRESSED("invalid micropython decorator", "\377\225micropython decorator")
MP_MATCH_COMPRESSED("invalid syntax", "\377\225\272")
MP_MATCH_COMPRESSED("invalid syntax for integer", "\377\225\272\224integer")
MP_MATCH_COMPRESSED("issubclass() arg 1 must be a class", "\377\232\210\323\206\216\245\275")
MP_MATCH_COMPRESSED("issubclass() arg 2 must be a class or a tuple of classes", "\377\232\210\312\206\216\245\275\322\245\302\220\374")
MP_MATCH_COMPRESSED("join expects a list of str/bytes objects consistent with self object", "\377join\257\245\306\220str/bytes objects\377\250\310\201")
MP_MATCH_COMPRESSED("local variable referenced before assignment", "\377local variable referenced\362\207")
MP_MATCH_COMPRESSED("long int not supported in this build", "\377\307\263\203\204\236this\365")
MP_MATCH_COMPRESSED("memory allocation failed, allocating %u bytes", "\377\270\240\260\350\326\370")
MP_MATCH_COMPRESSED("memory allocation failed, heap is locked", "\377\270\240\260heap\321locked")
MP_MATCH_COMPRESSED("module not found", "\377module\203\235")
MP_MATCH_COMPRESSED("multiple *x in assignment", "\377\213\317\236\207")
MP_MATCH_COMPRESSED("multiple bases have instance lay-out conflict", "\377\213\361have\251lay-out\376")
MP_MATCH_COMPRESSED("multiple inheritance not supported", "\377\213inheritance\203\204")
MP_MATCH_COMPRESSED("must use keyword argument for key function", "\377\206use\211\200\224key\205")
MP_MATCH_COMPRESSED("name not defined", "\377\215\203defined")
MP_MATCH_COMPRESSED("name too long", "\377\215\315\307")
MP_MATCH_COMPRESSED("negative power with no float support", "\377\252power\250\237float\227")
MP_MATCH_COMPRESSED("negative shift count", "\377\252shift count")
MP_MATCH_COMPRESSED("no active exception to reraise", "\377\237\347exception\230reraise")
MP_MATCH_COMPRESSED("no binding for nonlocal found", "\377\237\363\224\217\235")
MP_MATCH_COMPRESSED("no such attribute", "\377\237such\356")
MP_MATCH_COMPRESSED("non-default argument follows default argument", "\377non-default\200follows\256\200")
MP_MATCH_COMPRESSED("object doesn't support item assignment", "\377\201\223\227\305\207")
MP_MATCH_COMPRESSED("object doesn't support item deletion", "\377\201\223\227\305deletion")
MP_MATCH_COMPRESSED("object has no len", "\377\201\261\237len")
MP_MATCH_COMPRESSED("object isn't subscriptable", "\377\201\277subscriptable")
MP_MATCH_COMPRESSED("object not an iterator", "\377\201\203\274iterator")
MP_MATCH_COMPRESSED("object not callable", "\377\201\203\371")
MP_MATCH_COMPRESSED("object not in sequence", "\377\201\203\236\254")
MP_MATCH_COMPRESSED("object not iterable", "\377\201\203iterable")
MP_MATCH_COMPRESSED("object with buffer protocol required", "\377\201\250\364protocol\221")
MP_MATCH_COMPRESSED("opcode", "opcode")
MP_MATCH_COMPRESSED("ord expects a character", "\377ord\257\245\372")
MP_MATCH_COMPRESSED("pop from empty list", "\377pop\304\234\306")
MP_MATCH_COMPRESSED("popitem(): dictionary is empty", "\377popitem(): dictionary\321\234")
MP_MATCH_COMPRESSED("positional arg after **", "\377\214\210\233\316")
MP_MATCH_COMPRESSED("positional arg after keyword arg", "\377\214\210\233\211\210")
MP_MATCH_COMPRESSED("rsplit(None,n)", "rsplit(None,n)")
MP_MATCH_COMPRESSED("small int overflow", "\377small\263\253")
MP_MATCH_COMPRESSED("start/end indices", "\377start/end\262")
MP_MATCH_COMPRESSED("stream operation not supported", "\377stream operation\203\204")
MP_MATCH_COMPRESSED("substring not found", "\377substring\203\235")
MP_MATCH_COMPRESSED("super() can't find self", "\377super()\202find\310")
MP_MATCH_COMPRESSED("too many args", "\377\315many\354")
MP_MATCH_COMPRESSED("tuple index out of range", "\377\302\276\314\220\301")
MP_MATCH_COMPRESSED("tuple/list has wrong length", "\377\243\261\222\267")
MP_MATCH_COMPRESSED("type isn't an acceptable base type", "\377\231\277\274\346\360\231")
MP_MATCH_COMPRESSED("type takes 1 or 3 arguments", "\377\231takes\323\322\333\246")
MP_MATCH_COMPRESSED("unexpected indent", "\377\244\266")
MP_MATCH_COMPRESSED("unexpected keyword argument", "\377\244\211\200")
MP_MATCH_COMPRESSED("unicode name escapes", "\377unicode\215escapes")
MP_MATCH_COMPRESSED("unindent doesn't match any outer indent level", "\377unindent\223match\353\300\266level")
MP_MATCH_COMPRESSED("unsupported type for operator", "\377unsupported\231\224operator")
MP_MATCH_COMPRESSED("wrong number of arguments", "\377\222\271\220\246")
MP_MATCH_COMPRESSED("wrong number of values to unpack", "\377\222\271\220\273\230unpack")
MP_MATCH_COMPRESSED("zero step", "\377\311step")
// Total input length:      2852
// Total compressed length: 1219
// Total data length:       1124
// Predicted saving:        509

// gzip length:             1749
// Percentage of gzip:      134.0%
// zlib length:             1737
// Percentage of zlib:      134.9%
